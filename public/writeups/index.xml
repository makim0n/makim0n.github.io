<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Writeups on Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</title><link>maki.bzh/writeups/</link><description>Recent content in Writeups on Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 27 Jun 2020 21:57:40 +0800</lastBuildDate><atom:link href="maki.bzh/writeups/index.xml" rel="self" type="application/rss+xml"/><item><title>[French FCSC] - Académie</title><link>maki.bzh/writeups/fcscfrench2020academie/</link><pubDate>Sat, 27 Jun 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/fcscfrench2020academie/</guid><description>C&amp;rsquo;est la rentrée Bienvenue à l&amp;rsquo;académie de l&amp;rsquo;investigation numérique ! Votre mission, valider un maximum d&amp;rsquo;étapes de cette série afin de démontrer votre dextérité en analyse mémoire GNU/Linux.
Première étape : retrouvez le HOSTNAME, le nom de l&amp;rsquo;utilisateur authentifié lors du dump et la version de Linux sur lequel le dump a été fait.
Format du flag : FCSC{hostname:user:x.x.x-x-amdxx}
TL;DR Cette suite de challenge se base sur le même dump mémoire.</description></item><item><title>[French FCSC] - Chapardeur de mots de passe</title><link>maki.bzh/writeups/fcscfrench2020chapardeur/</link><pubDate>Sat, 27 Jun 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/fcscfrench2020chapardeur/</guid><description>Un ami vous demande de l&amp;rsquo;aide pour déterminer si l&amp;rsquo;email qu&amp;rsquo;il vient d&amp;rsquo;ouvrir au sujet du Covid-19 était malveillant et si c&amp;rsquo;était le cas, ce qu&amp;rsquo;il risque. Il prétend avoir essayé d&amp;rsquo;ouvrir le fichier joint à cet mail sans y parvenir. Peu de temps après, une fenêtre liée à l&amp;rsquo;anti-virus a indiqué, entre autre, le mot KPOT v2.0 mais rien d&amp;rsquo;apparent n&amp;rsquo;est arrivé en dehors de cela.
Après une analyse préliminaire, votre ami vous informe qu&amp;rsquo;il est probable que ce malware ait été légèrement modifié, étant donné que le contenu potentiellement exfiltré (des parties du format de texte et de fichier avant chiffrement) ne semble plus prédictible.</description></item><item><title>[French FCSC] - Cryptolocker</title><link>maki.bzh/writeups/fcscfrench2020cryptolocker/</link><pubDate>Sat, 27 Jun 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/fcscfrench2020cryptolocker/</guid><description>Un de nos admins nous a appelé en urgence suite à un CryptoLocker qui s&amp;rsquo;est lancé sur un serveur ultra-sensible, juste après avoir appliqué une mise à jour fournie par notre prestataire informatique.
Ce malware vise spécifiquement un fichier pouvant faire perdre des millions d&amp;rsquo;euros à notre entreprise : il est très important de le retrouver !
L&amp;rsquo;administrateur nous a dit que pour éviter que le logiciel ne se propage, il a mis en pause le serveur virtualisé et a récupéré sa mémoire vive dès qu&amp;rsquo;il a détecté l&amp;rsquo;attaque.</description></item><item><title>[French FCSC] - Find Me</title><link>maki.bzh/writeups/fcscfrench2020findme/</link><pubDate>Sat, 27 Jun 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/fcscfrench2020findme/</guid><description>Vous avez accès à un fichier find_me qui semble renfermer un secret bien gardé, qui n&amp;rsquo;existe peut-être même plus. Retrouvez son contenu !
TL;DR Cette épreuve consiste à analyser une partition EXT4. Dans cette partition, on trouve une autre partition chiffrée (LUKS). La clé de chiffrement de ce volume a été supprimée, mais à l&amp;rsquo;aide de testdisk, il est possible de la récupérer. Ainsi, déchiffrer le volume, le monter et accéder au flag.</description></item><item><title>[German FCSC] - Intro to pwning 1</title><link>maki.bzh/writeups/fcscallemand2020pwn/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/fcscallemand2020pwn/</guid><description>TL;DR Il existe 3 fonctions: une welcome vulnérable au format string, une AAAAAAAA vulnérable au buffer overflow et une fonction win qui permet de récupérer un bash. Le binaire est protégé par le bit NX, l&amp;rsquo;ASLR et la PIE. La format string permet de contourner l&amp;rsquo;ASLR et la PIE. Lorsque les adresses sont recalculées, il suffit d&amp;rsquo;exploiter le buffer overflow pour attérir dans la fonction &amp;ldquo;win&amp;rdquo; et ainsi récupérer le flag.</description></item><item><title>[German FCSC] - Intro to reversing</title><link>maki.bzh/writeups/fcscallemand2020introrev/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/fcscallemand2020introrev/</guid><description>Intro to reversing 1 TL;DR Le mot de passe est hardcodé dans le code. Un simple &amp;ldquo;strings&amp;rdquo; ou une inspection des appels systèmes permet d&amp;rsquo;avoir le mot de passe permettant d&amp;rsquo;obtenir le flag.
Etat des lieux L&amp;rsquo;épreuve commence avec un binaire Linux (ELF) demandans un mot de passe:
Analyse dynamique Un des outils les plus utilisés en analyse dynamique est &amp;ldquo;ltrace&amp;rdquo;. Cette commande permet à un analyste de suivre les appels aux libraries au fur et à mesure de l&amp;rsquo;exécution du binaire.</description></item><item><title>[German FCSC] - ReMe</title><link>maki.bzh/writeups/fcscallemand2020reme/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/fcscallemand2020reme/</guid><description>ReMe 1 TL;DR Ce challenge est différent des autres, car il s&amp;rsquo;agit d&amp;rsquo;un PE en .Net. Avec DnSpy il est possible de récupérer les sources C#. Enfin, il suffit de trouver la routine en AES et la génération de la clé / iv pour enfin déchiffrer le flag.
Etat des lieux On commence donc avec un PE développé en .Net. L&amp;rsquo;avantage est qu&amp;rsquo;il est possible de récupérer les sources avec des outils comme DnSpy ou IlSpy.</description></item><item><title>[FIC 2020] - Hexpresso CTF Prequals</title><link>maki.bzh/writeups/hexpressofix2020/</link><pubDate>Tue, 21 Jan 2020 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/hexpressofix2020/</guid><description>Le CTF &amp;ldquo;CaptureTheFic&amp;rdquo; est organisé par l&amp;rsquo;équipe de CTF &amp;ldquo;Hexpresso&amp;rdquo;. Equipe connue pour ses différents résultats en CTF et pour l&amp;rsquo;organisation de CTF, tel que le BreizhCTF.
CaptureTheFic se déroule en deux étapes:
Une étape de pré-qualifications en ligne avec énormément d&amp;rsquo;équipes; Une phase finale au FIC, composée des 14 meilleures équipes issues des pré-qualifications. Comme ce writeup le montrera, ce CTF n&amp;rsquo;est pas un jeopardy standard. Cette préqualification comporte 8 étapes et il est nécessaire de terminer une épreuve pour accéder à la suivante.</description></item><item><title>[Santhacklaus 2019] - Golden rush</title><link>maki.bzh/writeups/santhacklaus2019goldenrush/</link><pubDate>Sun, 22 Dec 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhacklaus2019goldenrush/</guid><description>Level 1 - Donation GoldenRush is a set of challenges based on the Ethereum Blockchain technology where you will have to exploit vulnerable Smart Contracts. Your goal is to steal the money that I sent on it ! https://goldenrush.santhacklaus.xyz
Chaque challenge &amp;ldquo;Golden rush&amp;rdquo; est un smart contract à déployer sur la blockchain de test &amp;ldquo;Ropsten network&amp;rdquo;.
Mise en place de l&amp;rsquo;environnement Pour faire les challenges de blockchain ou même ceux sur rootme, il faut ajouter l&amp;rsquo;extension &amp;ldquo;MetaMask&amp;rdquo; dans son navigateur:</description></item><item><title>[Santhacklaus 2019] - Jacques ! Au secours !</title><link>maki.bzh/writeups/santhacklaus2019jacquiesheerhask/</link><pubDate>Sun, 22 Dec 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhacklaus2019jacquiesheerhask/</guid><description>One of our VIP clients, who wishes to remain anonymous, has apparently been hacked and all their important documents are now corrupted. Can you help us recover the files? We found a strange piece of software that might have caused all of this. MD5 of the file : ccaab91b06fc9a77f3b98d2b9164df8e Fichiers: http://cloud.id-iot.team/s/e2ZgLdHKwMoFQ8x
Etat des lieux Cette épreuve commence donc avec une archive zip contenant plusieurs fichiers:
Le fichier &amp;ldquo;READ_THIS.txt&amp;rdquo; contient un message charmant:</description></item><item><title>[Santhacklaus 2019] - Naughty Docker</title><link>maki.bzh/writeups/santhacklaus2019naughtydockre/</link><pubDate>Sun, 22 Dec 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhacklaus2019naughtydockre/</guid><description>It looks like a naughty developer has been deploying a Docker image on a Santa production server a few days before Christmas. He was in a rush and was not able to properly pass all security checks on the built Docker image. Would be a shame if this image could give you an SSH access to the production server&amp;hellip; http://46.30.204.47&amp;quot;
Etat des lieux En allant sur l&amp;rsquo;IP donnée dans l&amp;rsquo;énoncé, on trouve une note nous donnait accès au docker en question.</description></item><item><title>[Santhacklaus 2019] - Revmomon</title><link>maki.bzh/writeups/santhacklaus2019revmomon/</link><pubDate>Sun, 22 Dec 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhacklaus2019revmomon/</guid><description>Suspicious activity has been detected. Probably nothing to be scared about but take a look anyway. If you find anything, a backdoor, a malware or anything of this kind, flag is the sha256 of it. MD5 of the file : c93adc996da5dda82312e43e9a91d053 PCAP : https://mega.nz/#!eqQV3SwD!_jAfHMqMw9d-LIDoTDR9JziwNicsxkYymS87eR4pLUg
Etat des lieux A l&amp;rsquo;ouverture du PCAP, on peut voir énormément de paquets entre l&amp;rsquo;ip 172.17.0.5 et 172.17.0.1. Du premier paquet au 170281, c&amp;rsquo;est une alternance de paquets SYN / RST, caractéristique d&amp;rsquo;un Stealth Scan de nmap.</description></item><item><title>[Akerva] - WonkaChallenge</title><link>maki.bzh/writeups/wonkachall2019/</link><pubDate>Sat, 20 Jul 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/wonkachall2019/</guid><description>Introduction Cette année, lors de l&amp;rsquo;évènement LeHack 2019, nous avons assisté au lancement de la seconde édition du WonkaChallenge réalisé par Akerva. Lors de la première édition, nous pouvions nous confronter à un certain nombre d&amp;rsquo;épreuves, d&amp;rsquo;abord des challenges web puis de l&amp;rsquo;Active Directory. Les writeups officiels de l&amp;rsquo;édition de l&amp;rsquo;année dernière se trouvent ici :
Williwonka.shop : https://akerva.com/blog/wonkachall-akerva-ndh-2018-write-up-part-1/ Pramafil.com : https://akerva.com/blog/wonkachall-akerva-ndh2018-write-up-part-2/ Compromission SI pramafil : https://akerva.com/blog/wonkachall-akerva-ndh2018-write-up-part-3/ Compromission du domaine DEV : https://akerva.</description></item><item><title>[ECSC] - 3615 incident</title><link>maki.bzh/writeups/ecscfrench20193615incident/</link><pubDate>Thu, 27 Jun 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecscfrench20193615incident/</guid><description>3615 incident (1) Description Une victime de plus tombée sous le coup d’un rançongiciel. Le paiement de la rançon n’est pas envisagée vu le montant demandé. Vous êtes appelé pour essayer de restaurer les fichiers chiffrés. Une suite d’éléments est nécessaire pour avancer dans l’investigation et constituer le rapport d’incident. Pour commencer, quel est le nom du fichier exécutable de ce rançongiciel, son identifiant de processus et quel est devenu le nom du fichier flag.</description></item><item><title>[ECSC] - CryptoDIY</title><link>maki.bzh/writeups/ecscfrench2019cryptodiy/</link><pubDate>Thu, 27 Jun 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecscfrench2019cryptodiy/</guid><description>Description Dumby possède un secret qui en fait une personne exceptionnelle, en tout cas c’est ce qu’il dit. Dumb, un ami de Dumby, a échangé avec lui sur le sujet et n’a pas réussi à révéler ce mystère. Il vous confie une archive de cette conversation et compte sur vous pour résoudre l’énigme, surtout qu’il vient d’effacer la clé USB qui contenait ses clés secrètes et les fichiers déchiffrés, il porte bien son nom celui-là…</description></item><item><title>[ECSC] - Exfiltration</title><link>maki.bzh/writeups/ecscfrench2019exfiltration/</link><pubDate>Thu, 27 Jun 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecscfrench2019exfiltration/</guid><description>Description Notre SoC a détecté qu&amp;rsquo;un document confidentiel avait été exfiltré ! La méthode utilisée ne semble pas avancée et heureusement, une capture réseau a pu être faite au bon moment&amp;hellip; Retrouvez ce document.
Trouver la configuration de l&amp;rsquo;extraction On commence cette épreuve par une capture réseau. Comme à chaque fois en matière d&amp;rsquo;exfiltration, il suffit de trouver un bout du filon pour le remonter complètement.
Fig 6: Configuration de l&amp;rsquo;exfiltration</description></item><item><title>[ECSC] - Petites notes</title><link>maki.bzh/writeups/ecscfrench2019petitenote/</link><pubDate>Thu, 27 Jun 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecscfrench2019petitenote/</guid><description>Description Connaissez-vous bien le format PCAPng ?
Etat des lieux On commence donc ce challenge avec une capture réseau. Premier réflexe de CTF avec un format de flag : strings.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ➜ petitenote hexdump -C petites_notes.pcapng | grep -C 10 &amp;#39;ECSC&amp;#39; 001b3f80 00 0a 00 00 2f 03 6e 73 31 05 6b 61 73 65 63 02 |.</description></item><item><title>[ECSC] - PHPJail</title><link>maki.bzh/writeups/ecscfrench2019phpjail/</link><pubDate>Thu, 27 Jun 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecscfrench2019phpjail/</guid><description>Description Saurez-vous sortir de cette prison PHP pour retrouver le fichier flag présent sur le système ?
Etat des lieux Nous sommes face à une jail PHP, commençons par un phpinfo(); histoire de voir ce qui n&amp;rsquo;est pas autorisé:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ➜ phpjail cat &amp;lt;(echo &amp;#34;phpinfo();&amp;#34;) - | nc challenges.ecsc-teamfrance.fr 4002 /// PHP JAIL //// There&amp;#39;s a file named flag on this filesystem.</description></item><item><title>[TamuCTF 2019] - Honeypots</title><link>maki.bzh/writeups/tamu2019honeypots/</link><pubDate>Thu, 28 Feb 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/tamu2019honeypots/</guid><description>This part of the writeup will go pretty fast, it&amp;rsquo;s just parsing in the end. All challenges are in the following archive:
Password for the archive: tamuctf
Filename MD5 Hash Download link honeypot2.7z b08992d50e5885f6db8cf50f22eefab4 https://drive.google.com/uc?id=1lhYsk97AgYDMxzfz1r6FzUs28sugZUR0&amp;export=download Warning this challenge contains some malware samples.
Cowrie What was the most common src ip (telnet &amp;amp; ssh)? What was the most common telnet username? What was the most common ssh username? What is the url and channel of the IRC server that the one downloaded script tried to connect to?</description></item><item><title>[TamuCTF 2019] - Microservices</title><link>maki.bzh/writeups/tamu2019microservices/</link><pubDate>Thu, 28 Feb 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/tamu2019microservices/</guid><description>0_Intrusion Welcome to MicroServices inc, where do all things micro and service oriented! Recently we got an alert saying there was suspicious traffic on one of our web servers. Can you help us out?
Filename MD5 hash Download link microservice.pcap 18d2c48f5d03d5faa5cb4473f9819b4b https://mega.nz/#!Gv5zAahB!afQTRfSLEE93xDDoZbi0EoGLrGzshAALLCS-1LwykdY What is the IP Address of the attacker? For this flag I don&amp;rsquo;t have any real analysis, I just opened the PCAP file and looked at the different TCP conversations.</description></item><item><title>[TamuCTF 2019] - Reading rainbow</title><link>maki.bzh/writeups/tamu2019readingrainbow/</link><pubDate>Thu, 28 Feb 2019 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/tamu2019readingrainbow/</guid><description>Recently, the office put up a private webserver to store important information about the newest research project for the company. This information was to be kept confidential, as it&amp;rsquo;s release could mean a large loss for everyone in the office. Just as the research was about to be published, a competing firm published information eerily similar. Too similar&amp;hellip; Time to take a look through the office network logs to figure out what happened.</description></item><item><title>[OtterCTF] - Memory dump</title><link>maki.bzh/writeups/otterctf2018memorydump/</link><pubDate>Mon, 24 Dec 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/otterctf2018memorydump/</guid><description>The memory dump to analyze can be found at this address: https://mega.nz/#!sh8wmCIL!b4tpech4wzc3QQ6YgQ2uZnOmctRZ2duQxDqxbkWYipQ
1 - What the password? The first thing to do with a memory dump: determine which OS is it and which version of the OS. Volatility needs those information to properly parse the memory:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 $ vol.py --plugins=plug_vol/ -f usr_land/OtterCTF.vmem imageinfo Volatility Foundation Volatility Framework 2.</description></item><item><title>[OtterCTF] - Network</title><link>maki.bzh/writeups/otterctf2018network/</link><pubDate>Mon, 24 Dec 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/otterctf2018network/</guid><description>Network There are 4 network challenges during this CTF, I only solved 3 of them, here is how.
Birdman&amp;rsquo;s Data State of the art The PCAP file is not really big, I decided to open it using Wireshark. There are few things to notice:
Data in UDP protocol HTTP packets to txtwizard.net There nothing interesting in UDP traffic, data does not represent much.
On the other hand, HTTP traffic is very interesting.</description></item><item><title>[Santhacklaus 2018] - ArchDrive</title><link>maki.bzh/writeups/santhachlaus2018archdrive/</link><pubDate>Wed, 19 Dec 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhachlaus2018archdrive/</guid><description>ArchDrive 1/3 Statement State of the art This comes with a really good looking website:
I notice a strange GET parameter when clicking on Reset it:
https://archdrive.santhacklaus.xyz/?page=reset.php
Basic local file inclusion I tried to include /etc/passwd file:
https://archdrive.santhacklaus.xyz/?page=../../../../../../../../../etc/passwd
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 root❌0:0:root:/root:/bin/bash daemon❌1:1:daemon:/usr/sbin:/usr/sbin/nologin bin❌2:2:bin:/bin:/usr/sbin/nologin sys❌3:3:sys:/dev:/usr/sbin/nologin sync❌4:65534:sync:/bin:/bin/sync games❌5:60:games:/usr/games:/usr/sbin/nologin man❌6:12:man:/var/cache/man:/usr/sbin/nologin lp❌7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail❌8:8:mail:/var/mail:/usr/sbin/nologin news❌9:9:news:/var/spool/news:/usr/sbin/nologin uucp❌10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy❌13:13:proxy:/bin:/usr/sbin/nologin www-data❌33:33:www-data:/var/www:/usr/sbin/nologin backup❌34:34:backup:/var/backups:/usr/sbin/nologin list❌38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc❌39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats❌41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody❌65534:65534:nobody:/nonexistent:/usr/sbin/nologin _apt❌100:65534::/nonexistent:/bin/false G0lD3N_Us3r❌1000:1000:IMTLD{Th1s_iS_4n_ImP0rt4nT_uS3r},,,:/home/G0lD3N_Us3r:/bin/bash w00t!</description></item><item><title>[Santhacklaus 2018] - Bret Stiles</title><link>maki.bzh/writeups/santhacklaus2018bretstiles/</link><pubDate>Wed, 19 Dec 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhacklaus2018bretstiles/</guid><description>Statement State of the art A memory dump &amp;lt;3
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 $ volatility -f challenge.dmp imageinfo [Some garbage errors] Suggested Profile(s) : Win10x64_17134, Win10x64_10240_17770, Win10x64_14393, Win10x64_10586, Win10x64, Win2016x64_14393, Win10x64_16299, Win10x64_15063 (Instantiated with Win10x64_15063) AS Layer1 : SkipDuplicatesAMD64PagedMemory (Kernel AS) AS Layer2 : WindowsCrashDumpSpace64 (Unnamed AS) AS Layer3 : FileAddressSpace (/home/monique/Téléchargements/bretstiles/challenge.dmp) PAE type : No PAE DTB : 0x1aa000L KDBG : 0xf80150ad4a60L Number of Processors : 1 Image Type (Service Pack) : 0 KPCR for CPU 0 : 0xfffff80150b2d000L KUSER_SHARED_DATA : 0xfffff78000000000L Image date and time : 2018-11-05 20:50:14 UTC+0000 Image local date and time : 2018-11-05 12:50:14 -0800 Yay Windows 10&amp;hellip; :'(</description></item><item><title>[Santhacklaus 2018] - Mission impossible</title><link>maki.bzh/writeups/santhacklaus2018missionimpossible/</link><pubDate>Wed, 19 Dec 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhacklaus2018missionimpossible/</guid><description>Mission impossible 1 Statement (Awesome work for the video, really appreciate it as a player)
State of the art A memory dump again :D
1 2 3 4 5 6 7 8 9 10 11 12 $ volatility -f challenge.elf imageinfo [...] Take a looooooooong time [...] $ strings challenge.elf | grep &amp;#39;Linux version&amp;#39; | sort | uniq 2018-12-16T11:14:09.150996-05:00 virtual-debian kernel: [ 0.000000] Linux version 3.16.0-6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.</description></item><item><title>[Santhacklaus 2018] - NetRunner</title><link>maki.bzh/writeups/santhacklaus2018netrunner/</link><pubDate>Wed, 19 Dec 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/santhacklaus2018netrunner/</guid><description>NetRunner 1/3 Statement State of the art Ok, we got a sexy website:
A login form, we don&amp;rsquo;t have to use scanner or something like that, I want to say &amp;ldquo;SQL injection&amp;rdquo;.
After several tries, indeed, it&amp;rsquo;s a full blind sql injection:
Bypass I could try to script something or use SQLMap to extract all the database. And it&amp;rsquo;s probably that&amp;rsquo;s what I would have done before SIGSEGv1 event.
I was near Geluchat during the CTF and he first blooded one of the hardest web challenge.</description></item><item><title>[European Cyber Week] - AdmYSion</title><link>maki.bzh/writeups/ecw2018admyssion/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecw2018admyssion/</guid><description>State of the art We only have a login form in front of us:
My first move was trying an SQL injection&amp;hellip; It was useless, in fact it&amp;rsquo;s an LDAP injection:
Our little asterisk * is matching with all the accounts in the LDAP base, it&amp;rsquo;s now time to script :D
Blind LDAP Injection Because I already did an LDAP injection on a famous french challenge platform (it starts by root and ends by -me.</description></item><item><title>[European Cyber Week] - Chatbot</title><link>maki.bzh/writeups/ecw2018chatbot/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecw2018chatbot/</guid><description>Find the vulnerability To begin with, I just played with the binary, trying to find bugs in it&amp;hellip; After a few seconds I found this:
Ok, maybe there is something here, let&amp;rsquo;s open IDA :D (I hate it).
Framed in red: A few malloc declaration. Purple highlight: nickname variable. Green highlight: chatbot variable. According to the previous picture, we can assume that the heap looks like this:
Ok, so we saw that the program crashes when I enter too many bytes, let&amp;rsquo;s see how many it takes:</description></item><item><title>[European Cyber Week] - Drone wars</title><link>maki.bzh/writeups/ecw2018dronewars/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecw2018dronewars/</guid><description>Drone Wars 1 State of the art We have 2 files: Capture.zip and capture.wav. There is a binary file in the zip archive, don&amp;rsquo;t worry about it for now.
After several hours of crawling the internet searching for datas about the .wav files, I found a stego technic: SSTV.
https://medium.com/@sumit.arora/audio-steganography-the-art-of-hiding-secrets-within-earshot-part-2-of-2-c76b1be719b3
I found a tool for linux: qsstv.
Decoding the .wav I run QSSTV with VLC in background, set my audio output into QSSTV, and:</description></item><item><title>[European Cyber Week] - Intrusion</title><link>maki.bzh/writeups/ecw2018intrusion/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecw2018intrusion/</guid><description>Intrusion 1/4 State of the art I start this challenge with a website:
web150-smartstuff.challenge-ecw.fr
Nothing really interesting at first glance. After digging a bit in HTML source code, I notice 2 pages:
thor.css thor.js Thor.css When I checked this file, I noticed a different subdomain:
web150_dev.challenge-ecw.fr
Flag Then I just curl this new subdomain:
1 2 3 4 $ curl -v -H &amp;#39;User-Agent: Chrome&amp;#39; https://web150_dev.challenge-ecw.fr [...] ECW{5822a94206522fe5382d2f00acc5cadf} [...] Intrusion 2/4 State of the art Ok, now we&amp;rsquo;re on the dev platform.</description></item><item><title>[European Cyber Week] - SysIA</title><link>maki.bzh/writeups/ecw2018sysia/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecw2018sysia/</guid><description>State of the art A nice cyber-hacker-haxxor-website-of-death containing a magical robots.txt file:
1 2 User-agent: * Disallow: /notinterestingfile.php Local file include Let&amp;rsquo;s try something:
https://web075-sysia.challenge-ecw.fr/notinterestingfile.php?page=../../../../../../../etc/passwd
1 root❌0:0:root:/root:/bin/bash daemon❌1:1:daemon:/usr/sbin:/usr/sbin/nologin bin❌2:2:bin:/bin:/usr/sbin/nologin sys❌3:3:sys:/dev:/usr/sbin/nologin sync❌4:65534:sync:/bin:/bin/sync games❌5:60:games:/usr/games:/usr/sbin/nologin man❌6:12:man:/var/cache/man:/usr/sbin/nologin lp❌7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail❌8:8:mail:/var/mail:/usr/sbin/nologin news❌9:9:news:/var/spool/news:/usr/sbin/nologin uucp❌10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy❌13:13:proxy:/bin:/usr/sbin/nologin www-data❌33:33:www-data:/var/www:/usr/sbin/nologin backup❌34:34:backup:/var/backups:/usr/sbin/nologin list❌38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc❌39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats❌41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody❌65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-timesync❌100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false systemd-network❌101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false systemd-resolve❌102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false systemd-bus-proxy❌103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false _apt❌104:65534::/nonexistent:/bin/false Ok, it works, there is only one user with a /bin/bash.</description></item><item><title>[European Cyber Week] - Troll.jsp</title><link>maki.bzh/writeups/ecw2018trolljsp/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><guid>maki.bzh/writeups/ecw2018trolljsp/</guid><description>State of the art A marvelous Java website, I looooove Java (joke.), so the flag appears to have been stolen:
I had to guess the flag.jsp page:
On md5decrypt.net, this hash gives us: swp, it looks like a backup file of vim. Let&amp;rsquo;s try something like .flag.jsp.swp.
Backup file Oh, looks like we have the code of the flag.jsp page:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 &amp;lt;%@ page language=&amp;#34;java&amp;#34; contentType=&amp;#34;text/html; charset=UTF-8&amp;#34; pageEncoding=&amp;#34;UTF-8&amp;#34;%&amp;gt; &amp;lt;%@ taglib prefix = &amp;#34;s&amp;#34; uri = &amp;#34;/struts-tags&amp;#34; %&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Flag page!</description></item></channel></rss>