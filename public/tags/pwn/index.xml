<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>pwn - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</title><link>maki.bzh/tags/pwn/</link><description>pwn - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 05 Feb 2020 21:57:40 +0800</lastBuildDate><atom:link href="maki.bzh/tags/pwn/" rel="self" type="application/rss+xml"/><item><title>[German FCSC] - Intro to pwning 1</title><link>maki.bzh/writeups/fcscallemand2020pwn/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/fcscallemand2020pwn/</guid><description><![CDATA[TL;DR Il existe 3 fonctions: une welcome vulnérable au format string, une AAAAAAAA vulnérable au buffer overflow et une fonction win qui permet de récupérer un bash. Le binaire est protégé par le bit NX, l&rsquo;ASLR et la PIE. La format string permet de contourner l&rsquo;ASLR et la PIE. Lorsque les adresses sont recalculées, il suffit d&rsquo;exploiter le buffer overflow pour attérir dans la fonction &ldquo;win&rdquo; et ainsi récupérer le flag.]]></description></item><item><title>[Akerva] - WonkaChallenge</title><link>maki.bzh/writeups/wonkachall2019/</link><pubDate>Sat, 20 Jul 2019 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/wonkachall2019/</guid><description><![CDATA[Introduction Cette année, lors de l&rsquo;évènement LeHack 2019, nous avons assisté au lancement de la seconde édition du WonkaChallenge réalisé par Akerva. Lors de la première édition, nous pouvions nous confronter à un certain nombre d&rsquo;épreuves, d&rsquo;abord des challenges web puis de l&rsquo;Active Directory. Les writeups officiels de l&rsquo;édition de l&rsquo;année dernière se trouvent ici :
Williwonka.shop : https://akerva.com/blog/wonkachall-akerva-ndh-2018-write-up-part-1/ Pramafil.com : https://akerva.com/blog/wonkachall-akerva-ndh2018-write-up-part-2/ Compromission SI pramafil : https://akerva.com/blog/wonkachall-akerva-ndh2018-write-up-part-3/ Compromission du domaine DEV : https://akerva.]]></description></item><item><title>[European Cyber Week] - Chatbot</title><link>maki.bzh/writeups/ecw2018chatbot/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/ecw2018chatbot/</guid><description>Find the vulnerability To begin with, I just played with the binary, trying to find bugs in it&amp;hellip; After a few seconds I found this:
Ok, maybe there is something here, let&amp;rsquo;s open IDA :D (I hate it).
Framed in red: A few malloc declaration. Purple highlight: nickname variable. Green highlight: chatbot variable. According to the previous picture, we can assume that the heap looks like this:
Ok, so we saw that the program crashes when I enter too many bytes, let&amp;rsquo;s see how many it takes:</description></item></channel></rss>