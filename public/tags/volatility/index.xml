<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>volatility - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</title><link>maki.bzh/tags/volatility/</link><description>volatility - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 27 Jun 2020 21:57:40 +0800</lastBuildDate><atom:link href="maki.bzh/tags/volatility/" rel="self" type="application/rss+xml"/><item><title>[French FCSC] - Académie</title><link>maki.bzh/writeups/fcscfrench2020academie/</link><pubDate>Sat, 27 Jun 2020 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/fcscfrench2020academie/</guid><description><![CDATA[C&rsquo;est la rentrée Bienvenue à l&rsquo;académie de l&rsquo;investigation numérique ! Votre mission, valider un maximum d&rsquo;étapes de cette série afin de démontrer votre dextérité en analyse mémoire GNU/Linux.
Première étape : retrouvez le HOSTNAME, le nom de l&rsquo;utilisateur authentifié lors du dump et la version de Linux sur lequel le dump a été fait.
Format du flag : FCSC{hostname:user:x.x.x-x-amdxx}
TL;DR Cette suite de challenge se base sur le même dump mémoire.]]></description></item><item><title>[French FCSC] - Cryptolocker</title><link>maki.bzh/writeups/fcscfrench2020cryptolocker/</link><pubDate>Sat, 27 Jun 2020 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/fcscfrench2020cryptolocker/</guid><description><![CDATA[Un de nos admins nous a appelé en urgence suite à un CryptoLocker qui s&rsquo;est lancé sur un serveur ultra-sensible, juste après avoir appliqué une mise à jour fournie par notre prestataire informatique.
Ce malware vise spécifiquement un fichier pouvant faire perdre des millions d&rsquo;euros à notre entreprise : il est très important de le retrouver !
L&rsquo;administrateur nous a dit que pour éviter que le logiciel ne se propage, il a mis en pause le serveur virtualisé et a récupéré sa mémoire vive dès qu&rsquo;il a détecté l&rsquo;attaque.]]></description></item><item><title>[ECSC] - 3615 incident</title><link>maki.bzh/writeups/ecscfrench20193615incident/</link><pubDate>Thu, 27 Jun 2019 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/ecscfrench20193615incident/</guid><description>3615 incident (1) Description Une victime de plus tombée sous le coup d’un rançongiciel. Le paiement de la rançon n’est pas envisagée vu le montant demandé. Vous êtes appelé pour essayer de restaurer les fichiers chiffrés. Une suite d’éléments est nécessaire pour avancer dans l’investigation et constituer le rapport d’incident. Pour commencer, quel est le nom du fichier exécutable de ce rançongiciel, son identifiant de processus et quel est devenu le nom du fichier flag.</description></item><item><title>[OtterCTF] - Memory dump</title><link>maki.bzh/writeups/otterctf2018memorydump/</link><pubDate>Mon, 24 Dec 2018 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/otterctf2018memorydump/</guid><description>The memory dump to analyze can be found at this address: https://mega.nz/#!sh8wmCIL!b4tpech4wzc3QQ6YgQ2uZnOmctRZ2duQxDqxbkWYipQ
1 - What the password? The first thing to do with a memory dump: determine which OS is it and which version of the OS. Volatility needs those information to properly parse the memory:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 $ vol.py --plugins=plug_vol/ -f usr_land/OtterCTF.vmem imageinfo Volatility Foundation Volatility Framework 2.</description></item><item><title>[Santhacklaus 2018] - Mission impossible</title><link>maki.bzh/writeups/santhacklaus2018missionimpossible/</link><pubDate>Wed, 19 Dec 2018 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/santhacklaus2018missionimpossible/</guid><description>Mission impossible 1 Statement (Awesome work for the video, really appreciate it as a player)
State of the art A memory dump again :D
1 2 3 4 5 6 7 8 9 10 11 12 $ volatility -f challenge.elf imageinfo [...] Take a looooooooong time [...] $ strings challenge.elf | grep &amp;#39;Linux version&amp;#39; | sort | uniq 2018-12-16T11:14:09.150996-05:00 virtual-debian kernel: [ 0.000000] Linux version 3.16.0-6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.</description></item></channel></rss>