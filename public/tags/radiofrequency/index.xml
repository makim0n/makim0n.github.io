<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>radiofrequency - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</title><link>maki.bzh/tags/radiofrequency/</link><description>radiofrequency - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 22 Oct 2018 21:57:40 +0800</lastBuildDate><atom:link href="maki.bzh/tags/radiofrequency/" rel="self" type="application/rss+xml"/><item><title>[European Cyber Week] - Drone wars</title><link>maki.bzh/writeups/ecw2018dronewars/</link><pubDate>Mon, 22 Oct 2018 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/ecw2018dronewars/</guid><description>Drone Wars 1 State of the art We have 2 files: Capture.zip and capture.wav. There is a binary file in the zip archive, don&amp;rsquo;t worry about it for now.
After several hours of crawling the internet searching for datas about the .wav files, I found a stego technic: SSTV.
https://medium.com/@sumit.arora/audio-steganography-the-art-of-hiding-secrets-within-earshot-part-2-of-2-c76b1be719b3
I found a tool for linux: qsstv.
Decoding the .wav I run QSSTV with VLC in background, set my audio output into QSSTV, and:</description></item></channel></rss>