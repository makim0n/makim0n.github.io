<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>format string - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</title><link>maki.bzh/tags/format-string/</link><description>format string - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 05 Feb 2020 21:57:40 +0800</lastBuildDate><atom:link href="maki.bzh/tags/format-string/" rel="self" type="application/rss+xml"/><item><title>[German FCSC] - Intro to pwning 1</title><link>maki.bzh/writeups/fcscallemand2020pwn/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/fcscallemand2020pwn/</guid><description><![CDATA[TL;DR Il existe 3 fonctions: une welcome vulnérable au format string, une AAAAAAAA vulnérable au buffer overflow et une fonction win qui permet de récupérer un bash. Le binaire est protégé par le bit NX, l&rsquo;ASLR et la PIE. La format string permet de contourner l&rsquo;ASLR et la PIE. Lorsque les adresses sont recalculées, il suffit d&rsquo;exploiter le buffer overflow pour attérir dans la fonction &ldquo;win&rdquo; et ainsi récupérer le flag.]]></description></item></channel></rss>