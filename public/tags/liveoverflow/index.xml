<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>liveoverflow - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</title><link>maki.bzh/tags/liveoverflow/</link><description>liveoverflow - Tag - Maki's adventure | Internet of things, IoT, ICS, forensic, pentest, red team &amp; more :)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 05 Feb 2020 21:57:40 +0800</lastBuildDate><atom:link href="maki.bzh/tags/liveoverflow/" rel="self" type="application/rss+xml"/><item><title>[German FCSC] - Intro to pwning 1</title><link>maki.bzh/writeups/fcscallemand2020pwn/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/fcscallemand2020pwn/</guid><description><![CDATA[TL;DR Il existe 3 fonctions: une welcome vulnérable au format string, une AAAAAAAA vulnérable au buffer overflow et une fonction win qui permet de récupérer un bash. Le binaire est protégé par le bit NX, l&rsquo;ASLR et la PIE. La format string permet de contourner l&rsquo;ASLR et la PIE. Lorsque les adresses sont recalculées, il suffit d&rsquo;exploiter le buffer overflow pour attérir dans la fonction &ldquo;win&rdquo; et ainsi récupérer le flag.]]></description></item><item><title>[German FCSC] - Intro to reversing</title><link>maki.bzh/writeups/fcscallemand2020introrev/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/fcscallemand2020introrev/</guid><description><![CDATA[Intro to reversing 1 TL;DR Le mot de passe est hardcodé dans le code. Un simple &ldquo;strings&rdquo; ou une inspection des appels systèmes permet d&rsquo;avoir le mot de passe permettant d&rsquo;obtenir le flag.
Etat des lieux L&rsquo;épreuve commence avec un binaire Linux (ELF) demandans un mot de passe:
Analyse dynamique Un des outils les plus utilisés en analyse dynamique est &ldquo;ltrace&rdquo;. Cette commande permet à un analyste de suivre les appels aux libraries au fur et à mesure de l&rsquo;exécution du binaire.]]></description></item><item><title>[German FCSC] - ReMe</title><link>maki.bzh/writeups/fcscallemand2020reme/</link><pubDate>Wed, 05 Feb 2020 21:57:40 +0800</pubDate><author>Maki</author><guid>maki.bzh/writeups/fcscallemand2020reme/</guid><description><![CDATA[ReMe 1 TL;DR Ce challenge est différent des autres, car il s&rsquo;agit d&rsquo;un PE en .Net. Avec DnSpy il est possible de récupérer les sources C#. Enfin, il suffit de trouver la routine en AES et la génération de la clé / iv pour enfin déchiffrer le flag.
Etat des lieux On commence donc avec un PE développé en .Net. L&rsquo;avantage est qu&rsquo;il est possible de récupérer les sources avec des outils comme DnSpy ou IlSpy.]]></description></item></channel></rss>